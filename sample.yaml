openapi: 3.0.0
info:
  title: Asset Masterdata API
  description: "API to get metadata for digital media assets such as Product Images,\
    \ Documents and Videos"
  contact:
    name: E-Business Assets
    url: https://bauhaus-de.atlassian.net/wiki/x/BQBuE
  version: 2.0.1
  x-api-id: fd9f8ffa-2aa6-416d-8520-657300c54196
  x-audience: company-internal
  x-apigee-proxy: assets-masterdata-v1
  x-business-critical: true
  x-authentication-method: "apikey,oauth2"
  x-data-types: other
  x-gdpr: false
  x-touchpoints-types: "consumerapp,salesapp,onlineshop"
  x-restrictions: false
servers:
- url: https://virtserver.swaggerhub.com/BAHAG/api-assets-masterdata/2.3.1
  description: SwaggerHub API Auto Mocking
- url: https://dev.api.bauhaus/v1/assets-masterdata/2
  description: dev stage
- url: https://qa.api.bauhaus/v1/assets-masterdata/2
  description: qa stage
- url: https://api.bauhaus/v1/assets-masterdata/2
  description: prod stage
paths:
  /{country-code}/assets/{asset_id}:
    get:
      tags:
      - assets
      summary: |
        Gets the information of an asset.
      operationId: getAssetById
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: asset_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: sap_number
        in: query
        required: false
        style: form
        explode: true
        schema:
          minimum: 8
          type: string
      - name: language_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asset"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /{country-code}/assets:
    get:
      tags:
      - assets
      summary: |
        Get the information of Assets
      operationId: getAssetsBySapNumberAndIds
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: "asset_id[]"
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: sap_number
        in: query
        required: false
        style: form
        explode: true
        schema:
          minimum: 8
          type: string
      - name: language_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assets_Response"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /{country-code}/assets/articlenumbers/{sap_number}:
    get:
      tags:
      - assets
      summary: |
        Get all assets by sap number.
      operationId: getAssetsBySapNumber
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: sap_number
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 8
          type: string
      - name: language_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assets_Response"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /{country-code}/assets/marketplace/{remote_system_id}:
    get:
      tags:
      - assets
      summary: |
        Get all assets by remote system id.
      operationId: getAssetsByRemoteSystemId
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: remote_system_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          minimum: 8
          type: string
      - name: sap_number
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: language_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assets_MP_Response"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /{country-code}/assets/findbydates:
    get:
      tags:
      - assets
      summary: |
        Get all assets with less data for a specific time range (MAX 24 Hours) and country
      operationId: getAssetsByLastModified
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: time_start
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      - name: time_end
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Date_Assets"
        "400":
          description: BadRequest
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /{country-code}/assets/storenumber/{store_number}/{language_id}/personalization/{perple_xity}:
    get:
      tags:
      - assets
      summary: |
        Get all assets by store number.
      operationId: getAssetsByStoreNumber
      parameters:
      - name: country-code
        in: path
        description: the country code
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: iso-3166
          enum:
          - at
          - ba
          - bg
          - dk
          - ee
          - fi
          - hu
          - is
          - lu
          - "false"
          - rs
          - se
          - si
          - sk
          - ch
          - tr
          - de
          - es
          - hr
          - nl
          - cz
          - hc
        example: de
      - name: store_number
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: language_id
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Assets_SN_Response"
        "404":
          description: NotFound
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_404:
                  $ref: "#/components/examples/error_404"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
  /health:
    get:
      tags:
      - health
      summary: "Health endpoint can be called to check the availability of the Service.\
        \  \nIt returns some basic information about the API.\n"
      operationId: getHealth
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Health"
        "500":
          description: KO
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/AssetErrorModel"
              examples:
                error_500:
                  $ref: "#/components/examples/error_500"
components:
  schemas:
    Assets_Response:
      required:
      - country
      - result
      properties:
        sap_number:
          type: string
          nullable: true
          example: "12345678"
        country:
          type: string
          nullable: false
        result:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/ResultItem"
    Assets_SN_Response:
      required:
      - country
      - result
      properties:
        store_number:
          type: string
          nullable: true
          example: "12345678"
        country:
          type: string
          nullable: false
        result:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/ResultItem"
    Assets_MP_Response:
      required:
      - country
      - result
      properties:
        remote_system_id:
          type: string
          nullable: true
          example: "12345678"
        country:
          type: string
          nullable: false
        result:
          type: array
          nullable: false
          items:
            $ref: "#/components/schemas/ResultItem"
    Date_Assets:
      properties:
        date_start:
          type: string
          format: date-time
        date_end:
          type: string
          format: date-time
        assets:
          type: array
          items:
            $ref: "#/components/schemas/AssetIdAndType"
    ResultItem:
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/Asset_Type"
        asset:
          $ref: "#/components/schemas/Asset"
    AssetIdAndType:
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/Asset_Type"
        available_countries:
          type: array
          nullable: false
          items:
            type: string
    Asset:
      required:
      - id
      - image_derivatives
      - languages
      - modified_at
      - sap_numbers
      - sub_type
      - type
      type: object
      properties:
        id:
          type: string
          nullable: false
        type:
          $ref: "#/components/schemas/Asset_Type"
        sub_type:
          type: string
          nullable: false
        modified_at:
          type: string
          format: date-time
          nullable: false
        expires_at:
          type: string
          format: date-time
          nullable: true
        sap_numbers:
          type: array
          nullable: false
          items:
            type: string
        motif:
          type: string
          nullable: true
        motif_url:
          type: string
          nullable: true
        languages:
          type: array
          items:
            type: string
        image_derivatives:
          type: array
          items:
            $ref: "#/components/schemas/Image_Derivative"
        embed_information:
          $ref: "#/components/schemas/Embed_Information"
        file_information:
          $ref: "#/components/schemas/File_Information"
        energy_classification_information:
          $ref: "#/components/schemas/Energy_Classification_Information"
        color_information:
          $ref: "#/components/schemas/Color_Information"
        is_marketplace_asset:
          type: boolean
          nullable: true
        remote_system_id:
          type: string
          nullable: true
        gravity:
          type: string
          nullable: true
        related_store_number:
          type: string
          nullable: true
        creator_info:
          type: string
          nullable: true
        transparent_derivatives:
          type: string
          nullable: true
        ai_info:
          type: string
          nullable: true
          enum:
          - AI_GENERATED
          - AI_MODIFIED
      nullable: true
      x-class-extra-annotation: '@com.fasterxml.jackson.annotation.JsonIgnoreProperties(ignoreUnknown
        = true)'
    Image_Derivative:
      required:
      - height
      - media_type
      - name
      - url
      - width
      type: object
      properties:
        name:
          type: string
          nullable: false
        width:
          type: integer
          format: int64
          nullable: false
          example: 696
        height:
          type: integer
          format: int64
          nullable: false
          example: 696
        media_type:
          type: string
          nullable: false
          enum:
          - IMAGE_WEBP
          - IMAGE_JPG
          - IMAGE_PNG
        url:
          type: string
          nullable: false
    Embed_Information:
      required:
      - id
      - provider
      type: object
      properties:
        id:
          type: string
          nullable: false
        provider:
          type: string
          nullable: false
          enum:
          - YOUTUBE
          - VIMEO
          - ORBITVU
          - CLIPLISTER
      nullable: true
    File_Information:
      required:
      - download_url
      - size_bytes
      type: object
      properties:
        size_bytes:
          type: integer
          format: int64
          nullable: false
        download_url:
          type: string
          nullable: false
      nullable: true
    Color_Information:
      required:
      - dominant_color
      - main_colors
      type: object
      properties:
        dominant_color:
          type: array
          items:
            type: integer
        main_colors:
          type: array
          items:
            $ref: "#/components/schemas/Main_Color_Info"
      nullable: true
    Main_Color_Info:
      required:
      - percentage
      - rgb_colors
      type: object
      properties:
        percentage:
          type: string
          nullable: false
        rgb_colors:
          type: array
          items:
            type: integer
      nullable: false
    Energy_Classification_Information:
      required:
      - category
      - class
      - range
      properties:
        class:
          type: string
          nullable: false
          enum:
          - AAAA
          - AAA
          - AA
          - A
          - B
          - C
          - D
          - E
          - F
          - G
        range:
          type: string
          nullable: false
          enum:
          - A-E
          - A-G
          - AA-F
          - AA-G
          - AAA-D
          - AAA-E
          - AAA-F
          - AAA-G
          - AAAA-D
        category:
          type: string
          nullable: false
        eprel_number:
          type: string
          nullable: true
      nullable: true
    Asset_Type:
      type: string
      nullable: false
      enum:
      - CONTENT_IMAGE
      - DOCUMENT
      - INTERACTIVE
      - LOGO
      - ENERGY_LOGO
      - BRAND_LOGO
      - PRODUCT_PICTO
      - CONTENT_PICTO
      - PRODUCT_IMAGE
      - VIDEO
      - UNKNOWN
      - WEB_IMAGE
      - WEB_DOCUMENT
      - CMS_ASSET
      - WEB_SVG
    AssetErrorModel:
      allOf:
      - $ref: "#/components/schemas/ErrorBaseModel"
      - $ref: "#/components/schemas/AssetErrorCode"
    AssetErrorCode:
      properties:
        error_code:
          type: string
          example: ASSET_NOT_FOUND
          enum:
          - ASSET_ERROR
          - ASSET_NOT_FOUND
          - ASSET_BAD_REQUEST
          - ASSET_UNKNOWN_ERROR
      description: Asset Error Code
    Health:
      type: object
      properties:
        team:
          type: string
          description: name of the team
          default: Asset Management
        api:
          type: string
          description: name of the api
          default: api-assets-masterdata
        version:
          type: string
          description: version of the api
          default: 2.3.0
    Asset_BigQuery_Schema:
      nullable: true
      allOf:
      - $ref: "#/components/schemas/PubSubMetadata"
      - $ref: "#/components/schemas/Asset_PubSub_Schema"
    Asset_PubSub_Schema:
      allOf:
      - $ref: "#/components/schemas/BigQueryEventKey"
      - type: object
        properties:
          payload:
            $ref: "#/components/schemas/Asset"
    ErrorBaseModel:
      required:
      - error_code
      - ray_id
      - status_code
      - timestamp
      type: object
      properties:
        status_code:
          type: integer
          description: the http status code
          format: int32
          example: 400
        timestamp:
          type: string
          description: The format of the date-time value is in UTC
          format: date-time
          example: 2020-09-25T12:02:51Z
        ray_id:
          type: string
          description: A Cloudflare Ray ID is an identifier given to every request
            that goes through Cloudflare. You can the value in the header field "CF-Ray"
            of the incoming request. Ray IDs are particularly useful when evaluating
            Security Events for patterns or false positives or more generally understanding
            your application traffic. See also https://developers.cloudflare.com/fundamentals/reference/cloudflare-ray-id/
          example: 8b7ad55fc97a3a52-FRA
        path:
          type: string
          description: "optional, should contain the path used in the incoming request"
          example: /path/to/resources
        details:
          type: array
          description: "optional, should contain detailes information about the occured\
            \ error"
          items:
            $ref: "#/components/schemas/ErrorDetailItem"
      description: the common error base model which is always part the model returned
        in case of an expected error in an API
      example:
        status_code: 400
        timestamp: 2020-09-25T12:02:51.000Z
        path: /path/to/resources
        ray_id: 8b7ad55fc97a3a52-FRA
        error_code: CSS_LENGTH_VALIDATION
        details:
        - ref: field_name
          cause: max lenght is 10
    ErrorDetailItem:
      type: object
      properties:
        ref:
          type: string
          description: a reference to which the error message belongs. As an example
            it could be a field in a form
          example: field_name
        cause:
          type: string
          description: the detailed error message for the given reference defined
            under 'ref'
          example: max lenght is 10
      description: the error detail item which is optional and can be used in the
        error model
    PubSubMetadata:
      properties:
        subscription_name:
          type: string
          example: productChangeEventFullBoBqSubV2
        message_id:
          type: string
          example: "5114356563393640"
        publish_time:
          type: string
          format: date-time
          example: 2022-07-20T08:42:27.807Z
        attributes:
          type: string
      description: Required fields of a BigQuery table which are filled by BigQuery
        Subscriptions in case write_metadata = true
    BigQueryEventKey:
      required:
      - id
      - modified_at
      properties:
        event_type:
          type: string
          description: Indicator for the type of event
          example: UPDATE
          enum:
          - CREATE
          - UPDATE
          - DELETE
        schema:
          type: string
          description: "Specifies the schema which is used for the Business Object\
            \ data in the payload. Pattern: (apis, domains)/BAHAG/\\<api or domain\
            \ name\\>/schemas/\\<schema name\\>"
          example: domains/BAHAG/api-product-domain/ProductCore
        version:
          type: string
          description: Version of the schema
          example: 2.1.2
        id:
          type: string
          description: Idendifier of the Business Object
          nullable: false
          example: "22380681"
        country_code:
          type: string
          description: "Country Code. For Business Objects which have no Country Code,\
            \ this field is NULL"
          format: iso-3166
          example: DE
        language_id:
          type: string
          description: "Language ID.  For Business Objects which have no Language\
            \ ID, this field is NULL"
          format: bcp47
          example: de-DE
        modified_at:
          type: string
          description: Last modification time of the Business Object - UTC Timestamp
          format: date-time
          nullable: false
          example: 2022-04-11T12:18:15Z
      description: "Required fields of a BigQuery table with Business Object data\
        \ in a Data Mesh project. The ID, Country Code and Language ID are the combined\
        \ key fields of the business object."
  responses:
    Assets_Not_Found:
      description: no asset(s) with given asset id(s) exist(s)
      content:
        application/json:
          schema:
            type: string
  parameters:
    countryCode:
      name: country-code
      in: path
      description: the country code
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: iso-3166
        enum:
        - at
        - ba
        - bg
        - dk
        - ee
        - fi
        - hu
        - is
        - lu
        - "false"
        - rs
        - se
        - si
        - sk
        - ch
        - tr
        - de
        - es
        - hr
        - nl
        - cz
        - hc
      example: de
  examples:
    error_400:
      value:
        status_code: 400
        timestamp: 2024-08-27T07:50:46.192+00:00
        ray_id: 8b9a3efb14342c6e-FRA
        path: /assets-masterdata/2/de/assets/1000001
        error_code: ASSET_BAD_REQUEST
        details:
        - ref: Bad request
          cause: "BadRequestException in the application : TimestampException in the\
            \ application : Document for Asset key 1000001:DE:de-DE doesn't exist"
    error_404:
      value:
        status_code: 404
        timestamp: 2024-08-27T07:50:46.192+00:00
        ray_id: 8b9a3efb14342c6e-FRA
        path: /assets-masterdata/2/de/assets/1000001
        error_code: ASSET_NOT_FOUND
        details:
        - ref: Not Found
          cause: "NotFoundException in the application : NoDataException in database\
            \ : Document for Asset key 1000001:DE:de-DE doesn't exist"
    error_500:
      value:
        status_code: 500
        timestamp: 2024-08-27T07:50:46.192+00:00
        ray_id: 8b9a3efb14342c6e-FRA
        path: /assets-masterdata/2/de/assets/1000001
        error_code: ASSET_ERROR
        details:
        - ref: Internal Error
          cause: "InternalServerErrorException in the application : An error occurred\
            \ during the read process for Asset with key 1000001:DE:de-DE"