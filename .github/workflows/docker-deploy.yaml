name: Create and publish a Docker image

on:
  push:
    tags: ["*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: [self-hosted, linux, x64, gke-hosted, size-m]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable the universe repository and yq repository
        run: |
            sudo add-apt-repository universe

      - name: Install required dependencies
        run: | 
              sudo apt-get update -y
              sudo apt-get install -y build-essential python3-dev wget

      - name: Install yq
        run: |
          VERSION=v4.34.1
          BINARY=yq_linux_amd64
          wget https://github.com/mikefarah/yq/releases/download/${VERSION}/${BINARY}.tar.gz -O - | tar xz && sudo mv ${BINARY} /usr/bin/yq

      - name: Install pip3
        run: sudo apt-get install python3-pip -y --fix-missing

      - name: install setuptools
        run: pip3 install wheel setuptools cython
      
      - name: install packages
        run: pip3 install -r requirements.txt

      - name: Test the linter with sample yaml files in the tests/ directory
        run: ./test_linter.sh

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  kpi-deployment-count:
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    environment: kpi-deployment-count
    steps:
      - name: Deployment
        run: echo "Successful deployed to prod - $(date)"